# 应用基本配置
app:
  name: "template"               # 应用名称，用于日志、标识等
  port: 9000                     # 应用监听端口
  mode: "debug"                  # 运行模式: debug/release，生产环境应设为"release"，调试环境设为"debug"
  defaultRootPass: "123456"   # 初次启动时自动创建的管理员账号密码，建议在首次登录后立即修改
  timezone: "Asia/Shanghai"      # 应用时区设置
  api_prefix: "/api/v1"          # API路由前缀
  static_path: "/static"         # 静态文件路径
  upload_path: "uploads"         # 文件上传路径
  max_upload_size: 10            # 最大上传文件大小(MB)
  allowed_file_types:            # 允许上传的文件类型
    - "image/jpeg"
    - "image/png"
    - "image/gif"
    - "application/pdf"
    - "application/msword"
    - "application/vnd.openxmlformats-officedocument.wordprocessingml.document"

# 前端模块配置
frontend:
  admin:
    enabled: false                # 是否启用管理端，设为false则完全禁用管理端功能
    route_prefix: "/admin"       # 管理端路由前缀
    title: "管理后台"             # 管理端标题
    description: "系统管理后台"   # 管理端描述
  web:
    enabled: false                # 是否启用用户端，设为false则完全禁用用户端功能
    route_prefix: "/"            # 用户端路由前缀(根路径)
    title: "用户端"               # 用户端标题
    description: "用户前端应用"   # 用户端描述
  fallback:
    enabled: true                # 当所有前端模块都禁用时，是否启用备用页面
    message: "当前服务未启用"     # 备用页面显示消息

# 数据库配置
database:
  driver: "mysql"                # 数据库类型: mysql/sqlite，如设置为"sqlite"或mysql参数不全，将自动使用SQLite
  host: "127.0.0.1"              # MySQL主机地址，空字符串表示使用SQLite
  port: 3306                     # MySQL端口
  username: "root"              # MySQL用户名
  password: "123456"            # MySQL密码
  name: "gin_template"            # 数据库名称
  charset: "utf8mb4"             # 字符集，推荐utf8mb4以支持emoji等特殊字符
  max_idle_conns: 10             # 最大空闲连接数
  max_open_conns: 100            # 最大打开连接数
  conn_max_lifetime: 3600        # 连接最大生命周期(秒)
  slow_query_threshold: 200      # 慢查询阈值(毫秒)
  enable_logging: true           # 是否启用SQL日志
  table_prefix: ""               # 表名前缀

# JWT认证配置
jwt:
  secret_key: "change-to-your-secure-secret-key" # JWT签名密钥，生产环境必须修改为强密钥
  expires_in: 24                 # JWT令牌有效期，单位小时
  refresh_expires_in: 168        # 刷新令牌有效期，单位小时
  issuer: "template-app"         # JWT发行者
  audience: "template-users"     # JWT接收者
  blacklist_enabled: true        # 是否启用令牌黑名单
  blacklist_cleanup_interval: 24 # 黑名单清理间隔(小时)

# Redis缓存配置
redis:
  host: "localhost"              # Redis主机地址，设置为空字符串将禁用Redis并自动降级为内存缓存
  port: 6379                     # Redis端口
  password: ""                   # Redis密码，无密码则留空
  db: 0                          # Redis数据库索引，默认为0
  pool_size: 10                  # 连接池大小
  min_idle_conns: 5              # 最小空闲连接数
  max_conn_age: 3600             # 连接最大生命周期(秒)
  idle_timeout: 240              # 空闲连接超时时间(秒)
  read_timeout: 3                # 读取超时时间(秒)
  write_timeout: 3               # 写入超时时间(秒)
  dial_timeout: 5                # 连接超时时间(秒)

# 日志配置
log:
  level: "info"                  # 日志级别: debug/info/warn/error
  path: "logs"                   # 日志保存目录
  filename: "app.log"            # 日志文件名
  max_size: 100                  # 单日志文件最大大小，单位MB
  max_backups: 10                # 最大保留日志文件数
  max_age: 7                     # 日志文件最大保留天数
  compress: true                 # 是否压缩旧日志文件
  json_format: false             # 是否使用JSON格式输出
  show_caller: true              # 是否显示调用者信息
  show_line: true                # 是否显示行号
  show_stack: false              # 是否显示堆栈信息
  enable_console: true           # 是否同时输出到控制台

# 邮件服务配置
mail:
  host: "smtp.example.com"       # SMTP服务器地址
  port: 465                      # SMTP端口，通常SSL为465，TLS为587
  username: "your@example.com"   # SMTP用户名/邮箱地址
  password: "email-password"     # SMTP密码
  from: "your@example.com"       # 发件人邮箱，通常与username相同
  from_name: "应用名称"           # 发件人名称
  reply_to: "your@example.com"   # 回复地址
  ssl: true                      # 是否使用SSL加密，通常为true
  enabled: true                  # 是否启用邮件服务，设为false则不发送邮件
  template_path: "templates/mail" # 邮件模板路径
  max_retries: 3                 # 发送失败最大重试次数
  retry_interval: 5              # 重试间隔(秒)

# 跨域(CORS)配置
cors:
  enabled: true                  # 是否启用CORS支持
  allowed_origins:               # 允许的来源域名列表
    - "http://localhost:3000"
    - "http://localhost:4000"
    - "https://yourdomain.com"
  allowed_methods:               # 允许的HTTP方法
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:               # 允许的请求头
    - "Origin"
    - "Content-Type"
    - "Authorization"
  allow_credentials: true        # 是否允许请求携带凭证（Cookie等）
  max_age: 86400                 # 预检请求结果缓存时间，单位秒
  expose_headers:                # 允许浏览器访问的响应头
    - "Content-Length"
    - "Content-Type"

